
const https = require('https');
const fs = require('fs');
const url = require('url');

//const WebSocket = require('ws');

const databox = require('node-databox');


//My https cred generated by the container manager
const credentials = databox.getHttpsCredentials()

DATASOURCE_loadavg1 = JSON.parse(process.env.DATASOURCE_loadavg1);
DATASOURCE_loadavg5  = JSON.parse(process.env.DATASOURCE_loadavg5);
DATASOURCE_loadavg15  = JSON.parse(process.env.DATASOURCE_loadavg15);
DATASOURCE_freemem  = JSON.parse(process.env.DATASOURCE_freemem);
const storeUrl = ((url) => url.protocol + '//' + url.host)(url.parse(DATASOURCE_loadavg1.href));

let subscriptions = null;
let latestData = {};

const express = require('express');
const bodyParser = require('body-parser');
const app = express();
app.disable('x-powered-by');
app.use(bodyParser.urlencoded({ extended: true }));

app.use('/ui', express.static('www'));

app.get('/status', function(req, res){
	res.send('active');
});

app.get('/ui/data', function(req, res) {
	
		res.json(latestData);

});

app.get('/data', function(req, res) {
	
		res.json(latestData);

});

const server = https.createServer(credentials, app);
server.listen(8080);

databox.waitForStoreStatus(storeUrl, 'active',10)
	.then(() => databox.subscriptions.connect(storeUrl))
	.then((subs) => {
    subscriptions = subs;
    return databox.subscriptions.subscribe(DATASOURCE_loadavg1.href,'ts')
  })
  .then(() => databox.subscriptions.subscribe(DATASOURCE_loadavg5.href,'ts'))
  .then(() => databox.subscriptions.subscribe(DATASOURCE_loadavg15.href,'ts'))
  .then(() => databox.subscriptions.subscribe(DATASOURCE_freemem.href,'ts'))
	.then(() => {
    subscriptions.on('data', (hostname, datasourceID, data) => {
      console.log(hostname, datasourceID, data)
      latestData[datasourceID] = data;
    });
  })
	.catch((err) => console.error(err));
